{"version":3,"sources":["components/context.js","colors.js","components/Square.js","components/Column.js","components/Toolbar.js","components/Grid.js","components/App.js","index.js"],"names":["MouseDownContext","React","createContext","mousedown","color","squareType","dropdownSquareType","eraserActive","changeContextSquareType","setStartSquare","setEndSquare","addSquareToGrid","removeSquareFromGrid","unsetStartOrEnd","colors","Square","props","state","visited","handleOnMouseDown","bind","handleOnMouseUp","handleOnMouseEnter","handleOnMouseLeave","this","context","x","y","unsetAsStartOrEnd","colorSquare","setAsStartOrEnd","normalColor","setState","unhighlightedColor","colorBeforeStartOrEnd","squareTypeBeforeStartOrEnd","width","height","onMouseDown","onMouseUp","onMouseEnter","onMouseLeave","style","backgroundColor","className","Component","contextType","Column","squares","i","nNormalSquares","push","key","toString","squareSize","extraHeightValue","nHigherSquares","Toolbar","algorithm","handleAlgorithmChange","handleSquareSizeChange","handleIntervalChange","handleSquareTypeChange","handleEraserChange","maxInterval","minInterval","event","target","value","handleSquareResize","parseInt","checked","console","log","onClick","handleSearch","defaultValue","onChange","type","min","max","Grid","handleWindowResize","window","innerWidth","innerHeight","interval","grid","Map","searchOngoing","handleMouseDown","handleMouseUp","startSearch","handleEraserActiveChange","addEventListener","document","setTimeout","prepareGrid","size","shouldBeActive","delete","val","set","square","getSquare","undefined","xStart","yStart","start","z","end","xEnd","yEnd","get","firstRun","values","setAsUnvisited","resetColor","highlightedSquares","Math","floor","alert","startExists","endExists","BFS","DFS","AStar","queue","setAsVisited","highlight","length","BFSLoop","shift","adj","FreeAdjacentSquares","unhighlight","stack","DFSLoop","top","pop","tmp","open","g","h","SquareId","closed","AStarLoop","squareWithLeastDistanceIndex","leastDistance","gSquare","hSquare","DistanceFromEnd","currentSquare","splice","adjacentSquares","adjacentSquareId","currentSquareId","IsInArr","thing","arr","abs","diagonal","column","nColumns","nRows","extraWidthValue","nExtraWidth","nExtraHeight","nNormalWidth","nNormalHeight","columns","context_value","Provider","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.e291e748.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const MouseDownContext = React.createContext({\r\n    mousedown: 0,\r\n    color: \"black\",\r\n    squareType: 1,\r\n    dropdownSquareType: 1,\r\n    eraserActive: 0,\r\n    changeContextSquareType: () => {},\r\n    setStartSquare: () => {},\r\n    setEndSquare: () => {},\r\n    addSquareToGrid: () => {},\r\n    removeSquareFromGrid: () => {},\r\n    unsetStartOrEnd: () => {},\r\n});","export const colors = {\r\n    empty: \"white\",\r\n    wall: \"black\",\r\n    highlighted: \"yellow\",\r\n    start: \"green\",\r\n    end: \"red\",\r\n    visited: \"grey\",\r\n    visited2: \"lightgrey\"\r\n};","import React from 'react';\r\nimport {MouseDownContext} from './context.js'\r\nimport {colors} from './../colors.js'\r\n\r\nclass Square extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            color: colors.empty,\r\n            mousedown: 0,\r\n            squareType: 0,  //0 = Empty, 1 = Wall, 2 = Start, 3 = End\r\n            visited: 0,\r\n        };\r\n        this.handleOnMouseDown = this.handleOnMouseDown.bind(this);\r\n        this.handleOnMouseUp = this.handleOnMouseUp.bind(this);\r\n        this.handleOnMouseEnter = this.handleOnMouseEnter.bind(this);\r\n        this.handleOnMouseLeave = this.handleOnMouseLeave.bind(this);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.context.removeSquareFromGrid(this.props.x, this.props.y);\r\n    }\r\n\r\n    handleOnMouseLeave() {\r\n        if (this.context.mousedown === 1 && (this.context.squareType === 2 || this.context.squareType === 3)) {\r\n            this.unsetAsStartOrEnd();\r\n        }\r\n    }\r\n\r\n    handleOnMouseEnter() {\r\n        if (this.context.mousedown === 1) {\r\n            if (this.context.eraserActive === 1) {\r\n                if(this.state.squareType === 2 || this.state.squareType === 3) {\r\n                    this.unsetAsStartOrEnd();\r\n                    if (this.state.squareType === 2) {\r\n                        this.context.unsetStartOrEnd(0);\r\n                    } else {\r\n                        this.context.unsetStartOrEnd(1);\r\n                    }\r\n                }\r\n                this.colorSquare(colors.empty,0);\r\n            } else if (this.context.squareType === 1 && this.state.squareType === 0) {\r\n                this.colorSquare(this.context.color,this.context.squareType);\r\n            } else if (this.context.squareType === 2) {\r\n                this.setAsStartOrEnd(0);\r\n                this.context.setStartSquare(this.props.x,this.props.y);\r\n            } else if (this.context.squareType === 3) {\r\n                this.setAsStartOrEnd(1);\r\n                this.context.setEndSquare(this.props.x,this.props.y);\r\n            }\r\n        }\r\n    }\r\n\r\n    handleOnMouseDown() {\r\n        if(this.context.eraserActive === 1) {\r\n            this.colorSquare(colors.empty,0);\r\n        } else if (this.state.squareType === 2 || this.state.squareType === 3) {\r\n            this.context.changeContextSquareType(this.state.squareType);\r\n        } else {\r\n            if (this.context.squareType == 2) {\r\n                this.setAsStartOrEnd(0);\r\n                this.context.setStartSquare(this.props.x,this.props.y);\r\n            } else if (this.context.squareType == 3) {\r\n                this.setAsStartOrEnd(1);\r\n                this.context.setEndSquare(this.props.x,this.props.y);\r\n            } else {\r\n                this.colorSquare(this.context.color, this.context.squareType);\r\n            }\r\n        }\r\n    }\r\n\r\n    handleOnMouseUp() {\r\n        if (this.context.squareType === 2 || this.context.squareType === 3) {\r\n            this.context.changeContextSquareType(this.context.dropdownSquareType);\r\n        }\r\n    }\r\n\r\n    resetColor() {\r\n        var normalColor;\r\n        if (this.state.squareType === 0) {\r\n            normalColor = colors.empty;\r\n        } else if (this.state.squareType === 1) {\r\n            normalColor = colors.wall;\r\n        } else if (this.state.squareType === 2) {\r\n            normalColor = colors.start;\r\n        } else if (this.state.squareType === 3) {\r\n            normalColor = colors.end;\r\n        }\r\n        this.setState({\r\n            color: normalColor,\r\n        });\r\n        this.unhighlightedColor = normalColor;\r\n    }\r\n\r\n    colorSquare(color=this.context.color,squareType=0) {\r\n        this.setState({\r\n            color: color,\r\n            squareType: squareType,\r\n        });\r\n        this.unhighlightedColor = color;\r\n    }\r\n\r\n    setAsVisited() {\r\n        this.setState({\r\n            visited: 1,\r\n        });\r\n    }\r\n\r\n    setAsUnvisited() {\r\n        this.setState({\r\n            visited: 0,\r\n        });\r\n    }\r\n\r\n    setAsStartOrEnd(x=0) {  //x = 0: Start, x = 1: End\r\n        this.colorBeforeStartOrEnd = this.state.color;\r\n        this.squareTypeBeforeStartOrEnd = this.state.squareType;\r\n        if (x === 0) {\r\n            this.setState({\r\n                color: colors.start,\r\n                squareType: 2,\r\n            });\r\n        } else if (x === 1) {\r\n            this.setState({\r\n                color: colors.end,\r\n                squareType: 3,\r\n            });\r\n        }\r\n    }\r\n\r\n    unsetAsStartOrEnd() {\r\n        this.setState({\r\n            color: this.colorBeforeStartOrEnd,\r\n            squareType: this.squareTypeBeforeStartOrEnd,\r\n        });\r\n    }\r\n\r\n    highlight() {\r\n        this.unhighlightedColor = this.state.color;\r\n        this.setState({\r\n            color: colors.highlighted,\r\n        });\r\n    }\r\n\r\n    unhighlight() {\r\n        this.setState({\r\n            color: this.unhighlightedColor,\r\n        });\r\n    }\r\n\r\n    render() {\r\n        this.context.addSquareToGrid(this.props.x, this.props.y, this);\r\n        var width = this.props.width;\r\n        var height = this.props.height;\r\n\r\n        return(\r\n            <div onMouseDown={this.handleOnMouseDown} onMouseUp={this.handleOnMouseUp} onMouseEnter={this.handleOnMouseEnter} onMouseLeave={this.handleOnMouseLeave} style={{\r\n                backgroundColor: this.state.color,\r\n                height: height,\r\n                width: width,\r\n            }}\r\n            className=\"normalSquare\"></div>\r\n        );\r\n    }\r\n}\r\n\r\nSquare.contextType = MouseDownContext;\r\n\r\nexport default Square","import React from 'react';\r\nimport Square from './Square.js'\r\n\r\nclass Column extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        var squares = [];\r\n        for (var i = 0; i < this.props.nNormalSquares; i++) {\r\n            squares.push(<Square key={this.props.x.toString() + \"-\" + i.toString()} x={this.props.x} y={i} removeSquareFromGrid={this.props.removeSquareFromGrid} height={this.props.squareSize+this.props.extraHeightValue} width={this.props.width}/>);\r\n        }\r\n        for (i = 0; i < this.props.nHigherSquares; i++) {\r\n            squares.push(<Square key={this.props.x.toString() + \"-\" + (i + this.props.nNormalSquares).toString()} x={this.props.x} y={i+this.props.nNormalSquares} removeSquareFromGrid={this.props.removeSquareFromGrid} height={this.props.squareSize+this.props.extraHeightValue+1} width={this.props.width}/>);\r\n        }\r\n        return(\r\n            <div className=\"column\">\r\n            {squares}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Column","import React from 'react';\r\nimport './Toolbar.scss'\r\n\r\nclass Toolbar extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            algorithm: \"BFS\",   //Defaultvalue in select\r\n        }\r\n        this.handleAlgorithmChange = this.handleAlgorithmChange.bind(this);\r\n        this.handleSquareSizeChange = this.handleSquareSizeChange.bind(this);\r\n        this.handleIntervalChange = this.handleIntervalChange.bind(this);\r\n        this.handleSquareTypeChange = this.handleSquareTypeChange.bind(this);\r\n        this.handleEraserChange = this.handleEraserChange.bind(this);\r\n        this.maxInterval = 1000;\r\n        this.minInterval = 1;\r\n    }\r\n\r\n    handleAlgorithmChange(event) {\r\n        this.setState({\r\n            algorithm: event.target.value,\r\n        });\r\n    }\r\n\r\n    handleSquareSizeChange(event) {\r\n        this.props.handleSquareResize(parseInt(event.target.value));\r\n    }\r\n\r\n    handleIntervalChange(event) {\r\n        this.props.handleIntervalChange(this.maxInterval - parseInt(event.target.value) + this.minInterval);\r\n    }\r\n\r\n    handleSquareTypeChange(event) {\r\n        this.props.handleSquareTypeChange(parseInt(event.target.value));\r\n    }\r\n\r\n    handleEraserChange(event) {\r\n        this.props.handleEraserChange(parseInt(event.target.checked === true ? 1 : 0));\r\n        console.log(event.target.checked);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <button onClick={() => this.props.handleSearch(this.state.algorithm)}>Search</button>\r\n                <select defaultValue={this.state.algorithm} onChange={this.handleAlgorithmChange}>\r\n                    <option value=\"BFS\">BFS</option>\r\n                    <option value=\"DFS\">DFS</option>\r\n                    <option value=\"ASTAR\">A*</option>\r\n                </select>\r\n                <label>Square Size:</label>\r\n                <input type=\"range\" min=\"20\" max=\"200\" defaultValue=\"50\" onChange={this.handleSquareSizeChange}></input>\r\n                <label>Speed:</label>\r\n                <input type=\"range\" min={this.minInterval.toString()} max={this.maxInterval.toString()} defaultValue={this.maxInterval.toString()} onChange={this.handleIntervalChange}></input>\r\n                <label>Add Squares:</label>\r\n                <select onChange={this.handleSquareTypeChange}>\r\n                    <option value=\"1\">Wall</option>\r\n                    <option value=\"2\">Start</option>\r\n                    <option value=\"3\">End</option>\r\n                </select>\r\n                <label>Eraser:</label>\r\n                <input type=\"checkbox\" onChange={this.handleEraserChange}></input>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Toolbar","import React from 'react';\r\nimport './Grid.scss'\r\nimport Column from './Column.js'\r\nimport Toolbar from './Toolbar.js'\r\nimport {MouseDownContext} from './context.js'\r\nimport {colors} from './../colors.js'\r\nimport Square from './Square';\r\n\r\nclass Grid extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            width: 0,   //Width of grid\r\n            height: 0,  //Height of grid\r\n            mousedown: 0,   //0 = L Mouse Button not down, 1 = L Mouse Button is down\r\n            color: colors.wall,\r\n            squareSize: 50,\r\n            interval: 1,\r\n            squareType: 1,\r\n            dropdownSquareType: 1,\r\n            eraserActive: 0,\r\n        }\r\n\r\n        this.grid = new Map();\r\n        this.searchOngoing = false;\r\n\r\n        this.handleMouseDown = this.handleMouseDown.bind(this);\r\n        this.handleMouseUp = this.handleMouseUp.bind(this);\r\n        this.addSquareToGrid = this.addSquareToGrid.bind(this);\r\n        this.removeSquareFromGrid = this.removeSquareFromGrid.bind(this);\r\n        this.startSearch = this.startSearch.bind(this);\r\n        this.handleSearch = this.handleSearch.bind(this);\r\n        this.handleSquareResize = this.handleSquareResize.bind(this);\r\n        this.handleIntervalChange = this.handleIntervalChange.bind(this);\r\n        this.changeContextSquareType = this.changeContextSquareType.bind(this);\r\n        this.setStartSquare = this.setStartSquare.bind(this);\r\n        this.setEndSquare = this.setEndSquare.bind(this);\r\n        this.handleSquareTypeChange = this.handleSquareTypeChange.bind(this);\r\n        this.handleEraserActiveChange = this.handleEraserActiveChange.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('resize', this.handleWindowResize);\r\n        document.addEventListener('mousedown', this.handleMouseDown);\r\n        document.addEventListener('mouseup', this.handleMouseUp);\r\n        this.handleWindowResize();\r\n        setTimeout(function() {this.prepareGrid(true)}.bind(this),200);\r\n    }\r\n\r\n    handleWindowResize = () => {\r\n        this.setState({ \r\n            width: window.innerWidth - 4,\r\n            height: window.innerHeight - 4 - 34,    //4 : square borders, 34 : taskbar height\r\n         });\r\n    }\r\n\r\n    //Changes state and context mousedown\r\n    handleMouseDown() {\r\n        this.setState({\r\n            mousedown: 1,\r\n        });\r\n    }\r\n    \r\n    //Changes state and context mousedown\r\n    handleMouseUp() {\r\n        this.setState({\r\n            mousedown: 0,\r\n        });\r\n    }\r\n\r\n    handleSquareResize(size) {\r\n        this.setState({\r\n            squareSize: size,\r\n        });\r\n    }\r\n\r\n    //Used by Toolbar speed slider\r\n    handleIntervalChange(interval) {\r\n        this.setState({\r\n            interval: interval,\r\n        });\r\n    }\r\n\r\n    //Used by Toolbar grid square dropdown\r\n    handleSquareTypeChange(squareType) {\r\n        this.changeContextSquareType(squareType);\r\n        this.setState({\r\n            dropdownSquareType: squareType,\r\n        });\r\n    }\r\n\r\n    changeContextSquareType(squareType) {\r\n        this.setState({\r\n            squareType: squareType,\r\n        });\r\n    }\r\n\r\n    handleEraserActiveChange(shouldBeActive) {\r\n        console.log(shouldBeActive);\r\n        this.setState({\r\n            eraserActive: shouldBeActive,\r\n        });\r\n    }\r\n\r\n    //Used by Square if it gets deleted\r\n    removeSquareFromGrid(x,y) {\r\n        this.grid.delete(x.toString() + \"-\" + y.toString());\r\n    }\r\n\r\n    //Used by Square when it gets created\r\n    addSquareToGrid(x,y,val) {\r\n        this.grid.set(x.toString() + \"-\" + y.toString(),val);\r\n    }\r\n\r\n    colorSquare(x,y,color=this.state.color,squareType=0) {\r\n        var square = this.getSquare(x,y);\r\n        square.colorSquare(color,squareType);\r\n    }\r\n\r\n    setStartSquare(x,y) {\r\n        if (this.xStart !== undefined && this.yStart !== undefined && this.getSquare(this.xStart,this.yStart)) {\r\n            this.getSquare(this.xStart,this.yStart).unsetAsStartOrEnd();\r\n        }\r\n        this.colorSquare(x,y,colors.start,2);\r\n        this.start = this.getSquare(x,y);\r\n        this.xStart = x;\r\n        this.yStart = y;\r\n    }\r\n\r\n    unsetStartOrEnd(z) {    //z == 0: start, z == 1: end\r\n        if (z === 0) {\r\n            this.start = undefined;\r\n        } else if (z === 1) {\r\n            this.end = undefined;\r\n        }\r\n    }\r\n\r\n    setEndSquare(x,y) {\r\n        if (this.xEnd !== undefined && this.yEnd !== undefined && this.getSquare(this.xEnd,this.yEnd)) {\r\n            this.getSquare(this.xEnd,this.yEnd).unsetAsStartOrEnd();\r\n        }\r\n        this.colorSquare(x,y,colors.end,3);\r\n        this.end = this.getSquare(x,y);\r\n        this.xEnd = x;\r\n        this.yEnd = y;\r\n    }\r\n\r\n    getSquare(x,y) {\r\n        return this.grid.get(x.toString() + \"-\" + y.toString());\r\n    }\r\n\r\n    //Resets values so algorithms will work\r\n    prepareGrid(firstRun) {\r\n        var values = this.grid.values();\r\n        for (var square of values) {\r\n            square.setAsUnvisited();\r\n            square.resetColor();\r\n        }\r\n        this.highlightedSquares = [];\r\n\r\n        if (firstRun) {\r\n            var x = Math.floor((this.state.width/(this.state.squareSize+1))/3);\r\n            var y = Math.floor((this.state.height/(this.state.squareSize+1))/2);\r\n            this.setStartSquare(x,y);\r\n            this.setEndSquare(2*x,y);\r\n        }\r\n    }\r\n\r\n    //Used by Toolbar Start button\r\n    handleSearch(algorithm) {\r\n        if (!this.searchOngoing) {\r\n            \r\n            this.prepareGrid(false);    //false = not first run\r\n            setTimeout(function(algorithm) {this.startSearch(algorithm)}.bind(this),this.state.interval,algorithm);\r\n        } else {\r\n            alert(\"Wait for the current search to finish\");\r\n        }\r\n    }\r\n\r\n    startSearch(algorithm) {\r\n        var xStart = this.start.props.x;\r\n        var yStart = this.start.props.y;\r\n        var start = this.getSquare(xStart,yStart);\r\n        var xEnd = this.end.props.x;\r\n        var yEnd = this.end.props.y;\r\n        var end = this.getSquare(xEnd,yEnd);\r\n        var startExists = start !== undefined && start.state.color === colors.start;\r\n        var endExists = end !== undefined && end.state.color === colors.end;\r\n        if(!startExists && !endExists) {\r\n            alert(\"Please add an end and a start node\");\r\n        } else if (!startExists) {\r\n            alert(\"Please add a start node\");\r\n        } else if (!endExists) {\r\n            alert(\"Please add an end node\");\r\n        } else {\r\n            this.searchOngoing = true;\r\n            console.log(\"search started\");\r\n            if (algorithm === \"BFS\") {\r\n                this.BFS(xStart,yStart);\r\n            } else if (algorithm === \"DFS\") {\r\n                this.DFS(xStart,yStart);\r\n            } else if (algorithm === \"ASTAR\") {\r\n                this.AStar(xStart,yStart,xEnd,yEnd);\r\n            } else {\r\n                console.log(\"No algorithm selected\");\r\n            }\r\n        }\r\n    }\r\n\r\n    BFS(x,y) {\r\n        console.log(this.grid);\r\n        var queue = [];\r\n        var start = this.getSquare(x,y);\r\n        queue.push(start);\r\n        start.setAsVisited();\r\n        this.highlightedSquares = [];\r\n        this.highlightedSquares.push(start);\r\n        this.highlightedSquares[0].highlight();\r\n        if(queue.length > 0) {\r\n            this.BFSLoop(queue);\r\n        }\r\n    }\r\n\r\n    BFSLoop(queue) {\r\n        if (queue.length < 1) {\r\n            this.searchOngoing = false;\r\n            return 0;\r\n        }\r\n        var square = queue.shift();\r\n        if(square.props.x === this.xEnd && square.props.y === this.yEnd) {\r\n            this.searchOngoing = false;\r\n            return 0;\r\n        }\r\n        var adj = this.FreeAdjacentSquares(square);\r\n        for (var i = 0; i < this.highlightedSquares.length; i++) {\r\n            this.highlightedSquares[i].unhighlight();\r\n        }\r\n        this.highlightedSquares = [];\r\n        for (var i = 0; i < adj.length; i++) {\r\n            if(adj[i].props.x === this.xEnd && adj[i].props.y === this.yEnd) {\r\n                this.searchOngoing = false;\r\n                return 0;\r\n            }\r\n            adj[i].setAsVisited();\r\n            queue.push(adj[i]);\r\n            adj[i].colorSquare(colors.visited);\r\n            this.highlightedSquares.push(adj[i]);\r\n            adj[i].highlight();\r\n        }\r\n        setTimeout(function(queue) {this.BFSLoop(queue)}.bind(this),this.state.interval,queue);\r\n    }\r\n\r\n    DFS(x,y) {\r\n        var stack = [];\r\n        stack.push(this.getSquare(x,y));\r\n        var start = this.getSquare(x,y);\r\n        start.setAsVisited();\r\n        this.highlightedSquares = [];\r\n        this.highlightedSquares.push(start);\r\n        this.highlightedSquares[0].highlight();\r\n        if(x != this.xEnd || y != this.yEnd && this.stack.length > 0) {\r\n            this.DFSLoop(x,y,start,stack);\r\n        }\r\n    }\r\n\r\n    DFSLoop(x,y,square,stack) {\r\n        var adj = this.FreeAdjacentSquares(square)\r\n        if (adj.length > 0) {\r\n            square = adj[0];\r\n        } else {\r\n            this.highlightedSquares[0].unhighlight();\r\n            this.highlightedSquares = [];\r\n            var top = stack.pop();\r\n            if (stack.length < 1) {\r\n                this.searchOngoing = false;\r\n                return 0;\r\n            }\r\n            var tmp = stack.pop();\r\n            this.highlightedSquares.push(tmp);\r\n            this.highlightedSquares[0].highlight();\r\n            top.colorSquare(colors.visited2);\r\n            x = tmp.props.x;\r\n            y = tmp.props.y;\r\n            stack.push(tmp);\r\n            square = tmp;\r\n            if(x != this.xEnd || y != this.yEnd && stack.length > 0) {\r\n                setTimeout(function(x,y,square,stack) {this.DFSLoop(x,y,square,stack)}.bind(this),this.state.interval,x,y,square,stack);\r\n            }\r\n            return 0;\r\n        }\r\n\r\n        stack.push(square);\r\n        square.setAsVisited();\r\n        if (square !== this.end && square !== this.start) {\r\n            square.colorSquare(colors.visited);\r\n        }\r\n\r\n        this.highlightedSquares[0].unhighlight();\r\n        this.highlightedSquares = [];\r\n\r\n        x = square.props.x;\r\n        y = square.props.y;\r\n\r\n        if(x != this.xEnd || y != this.yEnd && stack.length > 0) {\r\n            this.highlightedSquares.push(square);\r\n            this.highlightedSquares[0].highlight();\r\n            setTimeout(function(x,y,square,stack) {this.DFSLoop(x,y,square,stack)}.bind(this),this.state.interval,x,y,square,stack);\r\n        } else {\r\n            this.searchOngoing = false;\r\n        }\r\n    }\r\n\r\n    AStar(xStart,yStart,xEnd,yEnd) {\r\n        var open = [];\r\n        var closed = [];\r\n        var g = new Map();\r\n        var h = new Map();\r\n\r\n        open.push(this.start);\r\n\r\n        this.highlightedSquares.push(this.start);\r\n        this.start.setAsVisited();\r\n        this.highlightedSquares[0].highlight();\r\n\r\n        g.set(this.SquareId(this.start),0);\r\n\r\n        setTimeout(function(open,closed,g,h) {this.AStarLoop(open,closed,g,h)}.bind(this),this.state.interval,open,closed,g,h);\r\n    }\r\n\r\n    AStarLoop(open,closed,g,h) {\r\n        for (var i = 0; i < this.highlightedSquares.length; i++) {\r\n            this.highlightedSquares[i].unhighlight();\r\n        }\r\n\r\n        this.highlightedSquares = [];\r\n        var leastDistance = 1000000;\r\n        var squareWithLeastDistanceIndex;\r\n        \r\n        for (var i = 0; i < open.length; i++) {\r\n            var square = open[i];\r\n\r\n            var gSquare = g.get(this.SquareId(square));\r\n            var hSquare = this.DistanceFromEnd(square.props.x,square.props.y);\r\n\r\n            if (gSquare + hSquare < leastDistance) {\r\n                squareWithLeastDistanceIndex = i;\r\n                leastDistance = gSquare + hSquare;\r\n            }\r\n\r\n            this.highlightedSquares.push(square);\r\n            square.highlight();\r\n        }\r\n\r\n        for (var i = 0; i < this.highlightedSquares.length; i++) {\r\n            this.highlightedSquares[i].unhighlight();\r\n        }\r\n        this.highlightedSquares = [];\r\n        \r\n        var currentSquare = open[squareWithLeastDistanceIndex];\r\n\r\n        currentSquare.setAsVisited();\r\n        if (currentSquare !== this.start && currentSquare !== this.end) {\r\n            currentSquare.colorSquare(colors.visited);\r\n        }\r\n\r\n        this.highlightedSquares.push(currentSquare);\r\n        currentSquare.highlight();\r\n        \r\n        open.splice(squareWithLeastDistanceIndex,1);\r\n\r\n        var adjacentSquares = this.FreeAdjacentSquares(currentSquare,true); //true: include free diagonal squares\r\n\r\n        for (var i = 0; i < adjacentSquares.length; i++) {\r\n            if (adjacentSquares[i] === this.end) {\r\n                for (var i = 0; i < this.highlightedSquares.length; i++) {\r\n                    this.highlightedSquares[i].unhighlight();\r\n                }\r\n                this.highlightedSquares = [];\r\n                this.searchOngoing = false;\r\n                return 0;\r\n            }\r\n\r\n            this.highlightedSquares.push(adjacentSquares[i]);\r\n            adjacentSquares[i].highlight();\r\n\r\n            var adjacentSquareId = this.SquareId(adjacentSquares[i]);\r\n            var currentSquareId = this.SquareId(currentSquare);\r\n\r\n            g.set(adjacentSquareId,g.get(currentSquareId) + 1);\r\n\r\n            //If adjacent square isn't in open already and also isn't in closed\r\n            if (!this.IsInArr(adjacentSquares[i],open) && !this.IsInArr(adjacentSquares[i],closed)) {\r\n                open.push(adjacentSquares[i]);\r\n            }\r\n        }\r\n\r\n        closed.push(currentSquare); //Put current square in closed\r\n\r\n        if (open.length > 0) {\r\n            setTimeout(function(open,closed,g,h) {this.AStarLoop(open,closed,g,h)}.bind(this),this.state.interval,open,closed,g,h);\r\n        } else {\r\n            this.searchOngoing = false;\r\n        }\r\n    }\r\n\r\n    IsInArr(thing,arr) {\r\n        for (var i = 0; i < arr.length; i++) {\r\n            if (arr[i] === thing) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    //Returns Manhattan Distance from Starting Square\r\n    DistanceFromStart(x,y) {\r\n        return Math.abs(x-this.start.props.x) + Math.abs(y-this.start.props.y);\r\n    }\r\n    \r\n    //Returns Manhattan Distance from End Square\r\n    DistanceFromEnd(x,y) {\r\n        return Math.abs(x-this.end.props.x) + Math.abs(y-this.end.props.y);\r\n    }\r\n\r\n    //Returns id used in maps\r\n    SquareId(square) {\r\n        return square.props.x.toString() + \"-\" + square.props.y.toString()\r\n    }\r\n\r\n    //Returns all neighbouring squares that are unvisited and not wall\r\n    FreeAdjacentSquares(square,diagonal=false) {\r\n        var x = square.props.x;\r\n        var y = square.props.y;\r\n        var adj = [];\r\n        if (this.getSquare(x+1,y) !== undefined && this.getSquare(x+1,y).state.visited === 0 && this.getSquare(x+1,y).state.squareType !== 1) {\r\n            adj.push(this.getSquare(x+1,y));\r\n        }\r\n        if (this.getSquare(x-1,y) !== undefined && this.getSquare(x-1,y).state.visited === 0 && this.getSquare(x-1,y).state.squareType !== 1) {\r\n            adj.push(this.getSquare(x-1,y));\r\n        }\r\n        if (this.getSquare(x,y+1) !== undefined && this.getSquare(x,y+1).state.visited === 0 && this.getSquare(x,y+1).state.squareType !== 1) {\r\n            adj.push(this.getSquare(x,y+1));\r\n        }\r\n        if (this.getSquare(x,y-1) !== undefined && this.getSquare(x,y-1).state.visited === 0 && this.getSquare(x,y-1).state.squareType !== 1) {\r\n            adj.push(this.getSquare(x,y-1));\r\n        }\r\n\r\n        if (diagonal) {\r\n            if (this.getSquare(x+1,y+1) !== undefined && this.getSquare(x+1,y+1).state.visited === 0 && this.getSquare(x+1,y+1).state.squareType !== 1) {\r\n                adj.push(this.getSquare(x+1,y+1));\r\n            }\r\n            if (this.getSquare(x-1,y-1) !== undefined && this.getSquare(x-1,y-1).state.visited === 0 && this.getSquare(x-1,y-1).state.squareType !== 1) {\r\n                adj.push(this.getSquare(x-1,y-1));\r\n            }\r\n            if (this.getSquare(x-1,y+1) !== undefined && this.getSquare(x-1,y+1).state.visited === 0 && this.getSquare(x-1,y+1).state.squareType !== 1) {\r\n                adj.push(this.getSquare(x-1,y+1));\r\n            }\r\n            if (this.getSquare(x+1,y-1) !== undefined && this.getSquare(x+1,y-1).state.visited === 0 && this.getSquare(x+1,y-1).state.squareType !== 1) {\r\n                adj.push(this.getSquare(x+1,y-1));\r\n            }\r\n        }\r\n\r\n        return adj;\r\n    }\r\n\r\n    render() {\r\n        console.log(\"render\");\r\n        var nColumns = Math.floor(this.state.width/(this.state.squareSize+1));  //Add 1 to account for borders\r\n        var nRows = Math.floor(this.state.height/(this.state.squareSize+1)); //Squares per column\r\n        \r\n        var extraWidthValue = Math.floor((this.state.width%(this.state.squareSize+1))/nColumns);\r\n        var extraHeightValue = Math.floor((this.state.height%(this.state.squareSize+1))/nRows);\r\n\r\n        var nExtraWidth = (this.state.width%(this.state.squareSize+1))%nColumns;\r\n        var nExtraHeight = (this.state.height%(this.state.squareSize+1))%nRows;\r\n\r\n        var nNormalWidth = nColumns - nExtraWidth;\r\n        var nNormalHeight = nRows - nExtraHeight;\r\n\r\n        var columns = [];\r\n        var column;\r\n\r\n        for (var i = 0; i < nExtraWidth; i++) {\r\n            column = <Column key={i} x={i} nNormalSquares={nNormalHeight} nHigherSquares={nExtraHeight} extraHeightValue={extraHeightValue} squareSize={this.state.squareSize} width={this.state.squareSize+extraWidthValue+1}/>;\r\n            columns.push(column);\r\n        }\r\n        for (i = 0; i < nNormalWidth; i++) {\r\n            column = <Column key={i+nExtraWidth} x={i+nExtraWidth} nNormalSquares={nNormalHeight} nHigherSquares={nExtraHeight} extraHeightValue={extraHeightValue} squareSize={this.state.squareSize} width={this.state.squareSize+extraWidthValue}/>;\r\n            columns.push(column);\r\n        }\r\n\r\n        var context_value = {\r\n            mousedown: this.state.mousedown,\r\n            color: this.state.color,\r\n            squareType: this.state.squareType,\r\n            dropdownSquareType: this.state.dropdownSquareType,\r\n            eraserActive: this.state.eraserActive,\r\n            changeContextSquareType: this.changeContextSquareType,\r\n            setStartSquare: this.setStartSquare,\r\n            setEndSquare: this.setEndSquare,\r\n            addSquareToGrid: this.addSquareToGrid,\r\n            removeSquareFromGrid: this.removeSquareFromGrid,\r\n            unsetStartOrEnd: this.unsetStartOrEnd,\r\n        }\r\n\r\n        return (\r\n            <div>\r\n            <Toolbar handleSearch={this.handleSearch} handleSquareResize={this.handleSquareResize} handleIntervalChange={this.handleIntervalChange} handleSquareTypeChange={this.handleSquareTypeChange} handleEraserChange={this.handleEraserActiveChange}></Toolbar>\r\n            <MouseDownContext.Provider value={context_value}>\r\n            <div className=\"grid\">\r\n                {columns}\r\n            </div>\r\n            </MouseDownContext.Provider>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Grid","import React from 'react';\r\nimport Grid from './Grid.js'\r\n\r\nclass App extends React.Component {\r\n    render() {\r\n        return(\r\n            <Grid/>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './components/App.js';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}